// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: templates.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "templates.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {
class ttemplate_paramDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ttemplate_param> {
} _ttemplate_param_default_instance_;
class ttemplateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ttemplate> {
} _ttemplate_default_instance_;
class ttemplatesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ttemplates> {
} _ttemplates_default_instance_;

namespace protobuf_templates_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate_param, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate_param, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate_param, field_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplate, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplates, templates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ttemplates, timestamp_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ttemplate_param)},
  { 7, -1, sizeof(ttemplate)},
  { 15, -1, sizeof(ttemplates)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ttemplate_param_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ttemplate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ttemplates_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "templates.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _ttemplate_param_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ttemplate_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ttemplates_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ttemplate_param_default_instance_.DefaultConstruct();
  _ttemplate_default_instance_.DefaultConstruct();
  _ttemplates_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017templates.proto\022\002pb\"y\n\tttemplate\022\014\n\004na"
      "me\030\001 \001(\t\022\017\n\007message\030\002 \001(\t\022#\n\006params\030\003 \003("
      "\0132\023.pb.ttemplate.param\032(\n\005param\022\r\n\005index"
      "\030\001 \001(\005\022\020\n\010field_id\030\002 \001(\t\"A\n\nttemplates\022 "
      "\n\ttemplates\030\001 \003(\0132\r.pb.ttemplate\022\021\n\ttime"
      "stamp\030\002 \001(\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 219);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "templates.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_templates_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ttemplate_param::kIndexFieldNumber;
const int ttemplate_param::kFieldIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ttemplate_param::ttemplate_param()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_templates_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ttemplate.param)
}
ttemplate_param::ttemplate_param(const ttemplate_param& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field_id().size() > 0) {
    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:pb.ttemplate.param)
}

void ttemplate_param::SharedCtor() {
  field_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
  _cached_size_ = 0;
}

ttemplate_param::~ttemplate_param() {
  // @@protoc_insertion_point(destructor:pb.ttemplate.param)
  SharedDtor();
}

void ttemplate_param::SharedDtor() {
  field_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ttemplate_param::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ttemplate_param::descriptor() {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ttemplate_param& ttemplate_param::default_instance() {
  protobuf_templates_2eproto::InitDefaults();
  return *internal_default_instance();
}

ttemplate_param* ttemplate_param::New(::google::protobuf::Arena* arena) const {
  ttemplate_param* n = new ttemplate_param;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ttemplate_param::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ttemplate.param)
  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
}

bool ttemplate_param::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ttemplate.param)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field_id().data(), static_cast<int>(this->field_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ttemplate.param.field_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ttemplate.param)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ttemplate.param)
  return false;
#undef DO_
}

void ttemplate_param::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ttemplate.param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // string field_id = 2;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.param.field_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->field_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ttemplate.param)
}

::google::protobuf::uint8* ttemplate_param::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ttemplate.param)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // string field_id = 2;
  if (this->field_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field_id().data(), static_cast<int>(this->field_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.param.field_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->field_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ttemplate.param)
  return target;
}

size_t ttemplate_param::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ttemplate.param)
  size_t total_size = 0;

  // string field_id = 2;
  if (this->field_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field_id());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ttemplate_param::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ttemplate.param)
  GOOGLE_DCHECK_NE(&from, this);
  const ttemplate_param* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ttemplate_param>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ttemplate.param)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ttemplate.param)
    MergeFrom(*source);
  }
}

void ttemplate_param::MergeFrom(const ttemplate_param& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ttemplate.param)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field_id().size() > 0) {

    field_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field_id_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ttemplate_param::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ttemplate.param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ttemplate_param::CopyFrom(const ttemplate_param& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ttemplate.param)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ttemplate_param::IsInitialized() const {
  return true;
}

void ttemplate_param::Swap(ttemplate_param* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ttemplate_param::InternalSwap(ttemplate_param* other) {
  field_id_.Swap(&other->field_id_);
  std::swap(index_, other->index_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ttemplate_param::GetMetadata() const {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ttemplate_param

// int32 index = 1;
void ttemplate_param::clear_index() {
  index_ = 0;
}
::google::protobuf::int32 ttemplate_param::index() const {
  // @@protoc_insertion_point(field_get:pb.ttemplate.param.index)
  return index_;
}
void ttemplate_param::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:pb.ttemplate.param.index)
}

// string field_id = 2;
void ttemplate_param::clear_field_id() {
  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ttemplate_param::field_id() const {
  // @@protoc_insertion_point(field_get:pb.ttemplate.param.field_id)
  return field_id_.GetNoArena();
}
void ttemplate_param::set_field_id(const ::std::string& value) {
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ttemplate.param.field_id)
}
#if LANG_CXX11
void ttemplate_param::set_field_id(::std::string&& value) {
  
  field_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ttemplate.param.field_id)
}
#endif
void ttemplate_param::set_field_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ttemplate.param.field_id)
}
void ttemplate_param::set_field_id(const char* value, size_t size) {
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ttemplate.param.field_id)
}
::std::string* ttemplate_param::mutable_field_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.ttemplate.param.field_id)
  return field_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ttemplate_param::release_field_id() {
  // @@protoc_insertion_point(field_release:pb.ttemplate.param.field_id)
  
  return field_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ttemplate_param::set_allocated_field_id(::std::string* field_id) {
  if (field_id != NULL) {
    
  } else {
    
  }
  field_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_id);
  // @@protoc_insertion_point(field_set_allocated:pb.ttemplate.param.field_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ttemplate::kNameFieldNumber;
const int ttemplate::kMessageFieldNumber;
const int ttemplate::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ttemplate::ttemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_templates_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ttemplate)
}
ttemplate::ttemplate(const ttemplate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      params_(from.params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:pb.ttemplate)
}

void ttemplate::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ttemplate::~ttemplate() {
  // @@protoc_insertion_point(destructor:pb.ttemplate)
  SharedDtor();
}

void ttemplate::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ttemplate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ttemplate::descriptor() {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ttemplate& ttemplate::default_instance() {
  protobuf_templates_2eproto::InitDefaults();
  return *internal_default_instance();
}

ttemplate* ttemplate::New(::google::protobuf::Arena* arena) const {
  ttemplate* n = new ttemplate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ttemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ttemplate)
  params_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ttemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ttemplate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ttemplate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pb.ttemplate.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .pb.ttemplate.param params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ttemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ttemplate)
  return false;
#undef DO_
}

void ttemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ttemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // repeated .pb.ttemplate.param params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->params(static_cast<int>(i)), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ttemplate)
}

::google::protobuf::uint8* ttemplate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ttemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pb.ttemplate.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // repeated .pb.ttemplate.param params = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->params_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->params(static_cast<int>(i)), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ttemplate)
  return target;
}

size_t ttemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ttemplate)
  size_t total_size = 0;

  // repeated .pb.ttemplate.param params = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->params_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->params(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ttemplate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ttemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const ttemplate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ttemplate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ttemplate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ttemplate)
    MergeFrom(*source);
  }
}

void ttemplate::MergeFrom(const ttemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ttemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  params_.MergeFrom(from.params_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void ttemplate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ttemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ttemplate::CopyFrom(const ttemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ttemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ttemplate::IsInitialized() const {
  return true;
}

void ttemplate::Swap(ttemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ttemplate::InternalSwap(ttemplate* other) {
  params_.InternalSwap(&other->params_);
  name_.Swap(&other->name_);
  message_.Swap(&other->message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ttemplate::GetMetadata() const {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ttemplate

// string name = 1;
void ttemplate::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ttemplate::name() const {
  // @@protoc_insertion_point(field_get:pb.ttemplate.name)
  return name_.GetNoArena();
}
void ttemplate::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ttemplate.name)
}
#if LANG_CXX11
void ttemplate::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ttemplate.name)
}
#endif
void ttemplate::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ttemplate.name)
}
void ttemplate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ttemplate.name)
}
::std::string* ttemplate::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.ttemplate.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ttemplate::release_name() {
  // @@protoc_insertion_point(field_release:pb.ttemplate.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ttemplate::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.ttemplate.name)
}

// string message = 2;
void ttemplate::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ttemplate::message() const {
  // @@protoc_insertion_point(field_get:pb.ttemplate.message)
  return message_.GetNoArena();
}
void ttemplate::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.ttemplate.message)
}
#if LANG_CXX11
void ttemplate::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.ttemplate.message)
}
#endif
void ttemplate::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.ttemplate.message)
}
void ttemplate::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.ttemplate.message)
}
::std::string* ttemplate::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:pb.ttemplate.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ttemplate::release_message() {
  // @@protoc_insertion_point(field_release:pb.ttemplate.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ttemplate::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:pb.ttemplate.message)
}

// repeated .pb.ttemplate.param params = 3;
int ttemplate::params_size() const {
  return params_.size();
}
void ttemplate::clear_params() {
  params_.Clear();
}
const ::pb::ttemplate_param& ttemplate::params(int index) const {
  // @@protoc_insertion_point(field_get:pb.ttemplate.params)
  return params_.Get(index);
}
::pb::ttemplate_param* ttemplate::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ttemplate.params)
  return params_.Mutable(index);
}
::pb::ttemplate_param* ttemplate::add_params() {
  // @@protoc_insertion_point(field_add:pb.ttemplate.params)
  return params_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ttemplate_param >*
ttemplate::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:pb.ttemplate.params)
  return &params_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ttemplate_param >&
ttemplate::params() const {
  // @@protoc_insertion_point(field_list:pb.ttemplate.params)
  return params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ttemplates::kTemplatesFieldNumber;
const int ttemplates::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ttemplates::ttemplates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_templates_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ttemplates)
}
ttemplates::ttemplates(const ttemplates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      templates_(from.templates_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:pb.ttemplates)
}

void ttemplates::SharedCtor() {
  timestamp_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

ttemplates::~ttemplates() {
  // @@protoc_insertion_point(destructor:pb.ttemplates)
  SharedDtor();
}

void ttemplates::SharedDtor() {
}

void ttemplates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ttemplates::descriptor() {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ttemplates& ttemplates::default_instance() {
  protobuf_templates_2eproto::InitDefaults();
  return *internal_default_instance();
}

ttemplates* ttemplates::New(::google::protobuf::Arena* arena) const {
  ttemplates* n = new ttemplates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ttemplates::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ttemplates)
  templates_.Clear();
  timestamp_ = GOOGLE_LONGLONG(0);
}

bool ttemplates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ttemplates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.ttemplate templates = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_templates()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ttemplates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ttemplates)
  return false;
#undef DO_
}

void ttemplates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ttemplates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ttemplate templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->templates(static_cast<int>(i)), output);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:pb.ttemplates)
}

::google::protobuf::uint8* ttemplates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.ttemplates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pb.ttemplate templates = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->templates_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->templates(static_cast<int>(i)), deterministic, target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pb.ttemplates)
  return target;
}

size_t ttemplates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ttemplates)
  size_t total_size = 0;

  // repeated .pb.ttemplate templates = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->templates_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->templates(static_cast<int>(i)));
    }
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ttemplates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ttemplates)
  GOOGLE_DCHECK_NE(&from, this);
  const ttemplates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ttemplates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ttemplates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ttemplates)
    MergeFrom(*source);
  }
}

void ttemplates::MergeFrom(const ttemplates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ttemplates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  templates_.MergeFrom(from.templates_);
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void ttemplates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ttemplates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ttemplates::CopyFrom(const ttemplates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ttemplates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ttemplates::IsInitialized() const {
  return true;
}

void ttemplates::Swap(ttemplates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ttemplates::InternalSwap(ttemplates* other) {
  templates_.InternalSwap(&other->templates_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ttemplates::GetMetadata() const {
  protobuf_templates_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_templates_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ttemplates

// repeated .pb.ttemplate templates = 1;
int ttemplates::templates_size() const {
  return templates_.size();
}
void ttemplates::clear_templates() {
  templates_.Clear();
}
const ::pb::ttemplate& ttemplates::templates(int index) const {
  // @@protoc_insertion_point(field_get:pb.ttemplates.templates)
  return templates_.Get(index);
}
::pb::ttemplate* ttemplates::mutable_templates(int index) {
  // @@protoc_insertion_point(field_mutable:pb.ttemplates.templates)
  return templates_.Mutable(index);
}
::pb::ttemplate* ttemplates::add_templates() {
  // @@protoc_insertion_point(field_add:pb.ttemplates.templates)
  return templates_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::ttemplate >*
ttemplates::mutable_templates() {
  // @@protoc_insertion_point(field_mutable_list:pb.ttemplates.templates)
  return &templates_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::ttemplate >&
ttemplates::templates() const {
  // @@protoc_insertion_point(field_list:pb.ttemplates.templates)
  return templates_;
}

// int64 timestamp = 2;
void ttemplates::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ttemplates::timestamp() const {
  // @@protoc_insertion_point(field_get:pb.ttemplates.timestamp)
  return timestamp_;
}
void ttemplates::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:pb.ttemplates.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
