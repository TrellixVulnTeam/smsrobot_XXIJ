// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: contacts.proto

#ifndef PROTOBUF_contacts_2eproto__INCLUDED
#define PROTOBUF_contacts_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pb {
class tbh_field;
class tbh_fieldDefaultTypeInternal;
extern tbh_fieldDefaultTypeInternal _tbh_field_default_instance_;
class tcontacts;
class tcontactsDefaultTypeInternal;
extern tcontactsDefaultTypeInternal _tcontacts_default_instance_;
class tgroup;
class tgroupDefaultTypeInternal;
extern tgroupDefaultTypeInternal _tgroup_default_instance_;
class tperson;
class tpersonDefaultTypeInternal;
extern tpersonDefaultTypeInternal _tperson_default_instance_;
class tperson_bh_field;
class tperson_bh_fieldDefaultTypeInternal;
extern tperson_bh_fieldDefaultTypeInternal _tperson_bh_field_default_instance_;
class tperson_mobile;
class tperson_mobileDefaultTypeInternal;
extern tperson_mobileDefaultTypeInternal _tperson_mobile_default_instance_;
}  // namespace pb

namespace pb {

namespace protobuf_contacts_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_contacts_2eproto

// ===================================================================

class tbh_field : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tbh_field) */ {
 public:
  tbh_field();
  virtual ~tbh_field();

  tbh_field(const tbh_field& from);

  inline tbh_field& operator=(const tbh_field& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbh_field& default_instance();

  static inline const tbh_field* internal_default_instance() {
    return reinterpret_cast<const tbh_field*>(
               &_tbh_field_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(tbh_field* other);

  // implements Message ----------------------------------------------

  inline tbh_field* New() const PROTOBUF_FINAL { return New(NULL); }

  tbh_field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tbh_field& from);
  void MergeFrom(const tbh_field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tbh_field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:pb.tbh_field)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tperson_mobile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tperson.mobile) */ {
 public:
  tperson_mobile();
  virtual ~tperson_mobile();

  tperson_mobile(const tperson_mobile& from);

  inline tperson_mobile& operator=(const tperson_mobile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tperson_mobile& default_instance();

  static inline const tperson_mobile* internal_default_instance() {
    return reinterpret_cast<const tperson_mobile*>(
               &_tperson_mobile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(tperson_mobile* other);

  // implements Message ----------------------------------------------

  inline tperson_mobile* New() const PROTOBUF_FINAL { return New(NULL); }

  tperson_mobile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tperson_mobile& from);
  void MergeFrom(const tperson_mobile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tperson_mobile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string number = 1;
  void clear_number();
  static const int kNumberFieldNumber = 1;
  const ::std::string& number() const;
  void set_number(const ::std::string& value);
  #if LANG_CXX11
  void set_number(::std::string&& value);
  #endif
  void set_number(const char* value);
  void set_number(const char* value, size_t size);
  ::std::string* mutable_number();
  ::std::string* release_number();
  void set_allocated_number(::std::string* number);

  // @@protoc_insertion_point(class_scope:pb.tperson.mobile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr number_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tperson_bh_field : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tperson.bh_field) */ {
 public:
  tperson_bh_field();
  virtual ~tperson_bh_field();

  tperson_bh_field(const tperson_bh_field& from);

  inline tperson_bh_field& operator=(const tperson_bh_field& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tperson_bh_field& default_instance();

  static inline const tperson_bh_field* internal_default_instance() {
    return reinterpret_cast<const tperson_bh_field*>(
               &_tperson_bh_field_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(tperson_bh_field* other);

  // implements Message ----------------------------------------------

  inline tperson_bh_field* New() const PROTOBUF_FINAL { return New(NULL); }

  tperson_bh_field* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tperson_bh_field& from);
  void MergeFrom(const tperson_bh_field& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tperson_bh_field* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string field_id = 1;
  void clear_field_id();
  static const int kFieldIdFieldNumber = 1;
  const ::std::string& field_id() const;
  void set_field_id(const ::std::string& value);
  #if LANG_CXX11
  void set_field_id(::std::string&& value);
  #endif
  void set_field_id(const char* value);
  void set_field_id(const char* value, size_t size);
  ::std::string* mutable_field_id();
  ::std::string* release_field_id();
  void set_allocated_field_id(::std::string* field_id);

  // string value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:pb.tperson.bh_field)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr field_id_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tperson : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tperson) */ {
 public:
  tperson();
  virtual ~tperson();

  tperson(const tperson& from);

  inline tperson& operator=(const tperson& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tperson& default_instance();

  static inline const tperson* internal_default_instance() {
    return reinterpret_cast<const tperson*>(
               &_tperson_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(tperson* other);

  // implements Message ----------------------------------------------

  inline tperson* New() const PROTOBUF_FINAL { return New(NULL); }

  tperson* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tperson& from);
  void MergeFrom(const tperson& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tperson* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef tperson_mobile mobile;
  typedef tperson_bh_field bh_field;

  // accessors -------------------------------------------------------

  // repeated .pb.tperson.mobile mobiles = 10;
  int mobiles_size() const;
  void clear_mobiles();
  static const int kMobilesFieldNumber = 10;
  const ::pb::tperson_mobile& mobiles(int index) const;
  ::pb::tperson_mobile* mutable_mobiles(int index);
  ::pb::tperson_mobile* add_mobiles();
  ::google::protobuf::RepeatedPtrField< ::pb::tperson_mobile >*
      mutable_mobiles();
  const ::google::protobuf::RepeatedPtrField< ::pb::tperson_mobile >&
      mobiles() const;

  // repeated .pb.tperson.bh_field bh_fields = 11;
  int bh_fields_size() const;
  void clear_bh_fields();
  static const int kBhFieldsFieldNumber = 11;
  const ::pb::tperson_bh_field& bh_fields(int index) const;
  ::pb::tperson_bh_field* mutable_bh_fields(int index);
  ::pb::tperson_bh_field* add_bh_fields();
  ::google::protobuf::RepeatedPtrField< ::pb::tperson_bh_field >*
      mutable_bh_fields();
  const ::google::protobuf::RepeatedPtrField< ::pb::tperson_bh_field >&
      bh_fields() const;

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string money = 3;
  void clear_money();
  static const int kMoneyFieldNumber = 3;
  const ::std::string& money() const;
  void set_money(const ::std::string& value);
  #if LANG_CXX11
  void set_money(::std::string&& value);
  #endif
  void set_money(const char* value);
  void set_money(const char* value, size_t size);
  ::std::string* mutable_money();
  ::std::string* release_money();
  void set_allocated_money(::std::string* money);

  // @@protoc_insertion_point(class_scope:pb.tperson)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::tperson_mobile > mobiles_;
  ::google::protobuf::RepeatedPtrField< ::pb::tperson_bh_field > bh_fields_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr money_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tgroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tgroup) */ {
 public:
  tgroup();
  virtual ~tgroup();

  tgroup(const tgroup& from);

  inline tgroup& operator=(const tgroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tgroup& default_instance();

  static inline const tgroup* internal_default_instance() {
    return reinterpret_cast<const tgroup*>(
               &_tgroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(tgroup* other);

  // implements Message ----------------------------------------------

  inline tgroup* New() const PROTOBUF_FINAL { return New(NULL); }

  tgroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tgroup& from);
  void MergeFrom(const tgroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tgroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.tperson persons = 3;
  int persons_size() const;
  void clear_persons();
  static const int kPersonsFieldNumber = 3;
  const ::pb::tperson& persons(int index) const;
  ::pb::tperson* mutable_persons(int index);
  ::pb::tperson* add_persons();
  ::google::protobuf::RepeatedPtrField< ::pb::tperson >*
      mutable_persons();
  const ::google::protobuf::RepeatedPtrField< ::pb::tperson >&
      persons() const;

  // repeated string fields = 5;
  int fields_size() const;
  void clear_fields();
  static const int kFieldsFieldNumber = 5;
  const ::std::string& fields(int index) const;
  ::std::string* mutable_fields(int index);
  void set_fields(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_fields(int index, ::std::string&& value);
  #endif
  void set_fields(int index, const char* value);
  void set_fields(int index, const char* value, size_t size);
  ::std::string* add_fields();
  void add_fields(const ::std::string& value);
  #if LANG_CXX11
  void add_fields(::std::string&& value);
  #endif
  void add_fields(const char* value);
  void add_fields(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& fields() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_fields();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:pb.tgroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::tperson > persons_;
  ::google::protobuf::RepeatedPtrField< ::std::string> fields_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tcontacts : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.tcontacts) */ {
 public:
  tcontacts();
  virtual ~tcontacts();

  tcontacts(const tcontacts& from);

  inline tcontacts& operator=(const tcontacts& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tcontacts& default_instance();

  static inline const tcontacts* internal_default_instance() {
    return reinterpret_cast<const tcontacts*>(
               &_tcontacts_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(tcontacts* other);

  // implements Message ----------------------------------------------

  inline tcontacts* New() const PROTOBUF_FINAL { return New(NULL); }

  tcontacts* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tcontacts& from);
  void MergeFrom(const tcontacts& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tcontacts* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.tbh_field bh_fields = 1;
  int bh_fields_size() const;
  void clear_bh_fields();
  static const int kBhFieldsFieldNumber = 1;
  const ::pb::tbh_field& bh_fields(int index) const;
  ::pb::tbh_field* mutable_bh_fields(int index);
  ::pb::tbh_field* add_bh_fields();
  ::google::protobuf::RepeatedPtrField< ::pb::tbh_field >*
      mutable_bh_fields();
  const ::google::protobuf::RepeatedPtrField< ::pb::tbh_field >&
      bh_fields() const;

  // repeated .pb.tgroup groups = 3;
  int groups_size() const;
  void clear_groups();
  static const int kGroupsFieldNumber = 3;
  const ::pb::tgroup& groups(int index) const;
  ::pb::tgroup* mutable_groups(int index);
  ::pb::tgroup* add_groups();
  ::google::protobuf::RepeatedPtrField< ::pb::tgroup >*
      mutable_groups();
  const ::google::protobuf::RepeatedPtrField< ::pb::tgroup >&
      groups() const;

  // int64 timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pb.tcontacts)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::pb::tbh_field > bh_fields_;
  ::google::protobuf::RepeatedPtrField< ::pb::tgroup > groups_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_contacts_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// tbh_field

// string id = 1;
inline void tbh_field::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tbh_field::id() const {
  // @@protoc_insertion_point(field_get:pb.tbh_field.id)
  return id_.GetNoArena();
}
inline void tbh_field::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tbh_field.id)
}
#if LANG_CXX11
inline void tbh_field::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tbh_field.id)
}
#endif
inline void tbh_field::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tbh_field.id)
}
inline void tbh_field::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tbh_field.id)
}
inline ::std::string* tbh_field::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.tbh_field.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tbh_field::release_id() {
  // @@protoc_insertion_point(field_release:pb.tbh_field.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tbh_field::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.tbh_field.id)
}

// string name = 2;
inline void tbh_field::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tbh_field::name() const {
  // @@protoc_insertion_point(field_get:pb.tbh_field.name)
  return name_.GetNoArena();
}
inline void tbh_field::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tbh_field.name)
}
#if LANG_CXX11
inline void tbh_field::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tbh_field.name)
}
#endif
inline void tbh_field::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tbh_field.name)
}
inline void tbh_field::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tbh_field.name)
}
inline ::std::string* tbh_field::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.tbh_field.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tbh_field::release_name() {
  // @@protoc_insertion_point(field_release:pb.tbh_field.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tbh_field::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.tbh_field.name)
}

// -------------------------------------------------------------------

// tperson_mobile

// string number = 1;
inline void tperson_mobile::clear_number() {
  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tperson_mobile::number() const {
  // @@protoc_insertion_point(field_get:pb.tperson.mobile.number)
  return number_.GetNoArena();
}
inline void tperson_mobile::set_number(const ::std::string& value) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tperson.mobile.number)
}
#if LANG_CXX11
inline void tperson_mobile::set_number(::std::string&& value) {
  
  number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tperson.mobile.number)
}
#endif
inline void tperson_mobile::set_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tperson.mobile.number)
}
inline void tperson_mobile::set_number(const char* value, size_t size) {
  
  number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tperson.mobile.number)
}
inline ::std::string* tperson_mobile::mutable_number() {
  
  // @@protoc_insertion_point(field_mutable:pb.tperson.mobile.number)
  return number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tperson_mobile::release_number() {
  // @@protoc_insertion_point(field_release:pb.tperson.mobile.number)
  
  return number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tperson_mobile::set_allocated_number(::std::string* number) {
  if (number != NULL) {
    
  } else {
    
  }
  number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), number);
  // @@protoc_insertion_point(field_set_allocated:pb.tperson.mobile.number)
}

// -------------------------------------------------------------------

// tperson_bh_field

// string field_id = 1;
inline void tperson_bh_field::clear_field_id() {
  field_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tperson_bh_field::field_id() const {
  // @@protoc_insertion_point(field_get:pb.tperson.bh_field.field_id)
  return field_id_.GetNoArena();
}
inline void tperson_bh_field::set_field_id(const ::std::string& value) {
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tperson.bh_field.field_id)
}
#if LANG_CXX11
inline void tperson_bh_field::set_field_id(::std::string&& value) {
  
  field_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tperson.bh_field.field_id)
}
#endif
inline void tperson_bh_field::set_field_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tperson.bh_field.field_id)
}
inline void tperson_bh_field::set_field_id(const char* value, size_t size) {
  
  field_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tperson.bh_field.field_id)
}
inline ::std::string* tperson_bh_field::mutable_field_id() {
  
  // @@protoc_insertion_point(field_mutable:pb.tperson.bh_field.field_id)
  return field_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tperson_bh_field::release_field_id() {
  // @@protoc_insertion_point(field_release:pb.tperson.bh_field.field_id)
  
  return field_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tperson_bh_field::set_allocated_field_id(::std::string* field_id) {
  if (field_id != NULL) {
    
  } else {
    
  }
  field_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field_id);
  // @@protoc_insertion_point(field_set_allocated:pb.tperson.bh_field.field_id)
}

// string value = 2;
inline void tperson_bh_field::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tperson_bh_field::value() const {
  // @@protoc_insertion_point(field_get:pb.tperson.bh_field.value)
  return value_.GetNoArena();
}
inline void tperson_bh_field::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tperson.bh_field.value)
}
#if LANG_CXX11
inline void tperson_bh_field::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tperson.bh_field.value)
}
#endif
inline void tperson_bh_field::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tperson.bh_field.value)
}
inline void tperson_bh_field::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tperson.bh_field.value)
}
inline ::std::string* tperson_bh_field::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:pb.tperson.bh_field.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tperson_bh_field::release_value() {
  // @@protoc_insertion_point(field_release:pb.tperson.bh_field.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tperson_bh_field::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:pb.tperson.bh_field.value)
}

// -------------------------------------------------------------------

// tperson

// string name = 1;
inline void tperson::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tperson::name() const {
  // @@protoc_insertion_point(field_get:pb.tperson.name)
  return name_.GetNoArena();
}
inline void tperson::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tperson.name)
}
#if LANG_CXX11
inline void tperson::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tperson.name)
}
#endif
inline void tperson::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tperson.name)
}
inline void tperson::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tperson.name)
}
inline ::std::string* tperson::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.tperson.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tperson::release_name() {
  // @@protoc_insertion_point(field_release:pb.tperson.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tperson::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.tperson.name)
}

// string money = 3;
inline void tperson::clear_money() {
  money_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tperson::money() const {
  // @@protoc_insertion_point(field_get:pb.tperson.money)
  return money_.GetNoArena();
}
inline void tperson::set_money(const ::std::string& value) {
  
  money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tperson.money)
}
#if LANG_CXX11
inline void tperson::set_money(::std::string&& value) {
  
  money_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tperson.money)
}
#endif
inline void tperson::set_money(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tperson.money)
}
inline void tperson::set_money(const char* value, size_t size) {
  
  money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tperson.money)
}
inline ::std::string* tperson::mutable_money() {
  
  // @@protoc_insertion_point(field_mutable:pb.tperson.money)
  return money_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tperson::release_money() {
  // @@protoc_insertion_point(field_release:pb.tperson.money)
  
  return money_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tperson::set_allocated_money(::std::string* money) {
  if (money != NULL) {
    
  } else {
    
  }
  money_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), money);
  // @@protoc_insertion_point(field_set_allocated:pb.tperson.money)
}

// repeated .pb.tperson.mobile mobiles = 10;
inline int tperson::mobiles_size() const {
  return mobiles_.size();
}
inline void tperson::clear_mobiles() {
  mobiles_.Clear();
}
inline const ::pb::tperson_mobile& tperson::mobiles(int index) const {
  // @@protoc_insertion_point(field_get:pb.tperson.mobiles)
  return mobiles_.Get(index);
}
inline ::pb::tperson_mobile* tperson::mutable_mobiles(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tperson.mobiles)
  return mobiles_.Mutable(index);
}
inline ::pb::tperson_mobile* tperson::add_mobiles() {
  // @@protoc_insertion_point(field_add:pb.tperson.mobiles)
  return mobiles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::tperson_mobile >*
tperson::mutable_mobiles() {
  // @@protoc_insertion_point(field_mutable_list:pb.tperson.mobiles)
  return &mobiles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::tperson_mobile >&
tperson::mobiles() const {
  // @@protoc_insertion_point(field_list:pb.tperson.mobiles)
  return mobiles_;
}

// repeated .pb.tperson.bh_field bh_fields = 11;
inline int tperson::bh_fields_size() const {
  return bh_fields_.size();
}
inline void tperson::clear_bh_fields() {
  bh_fields_.Clear();
}
inline const ::pb::tperson_bh_field& tperson::bh_fields(int index) const {
  // @@protoc_insertion_point(field_get:pb.tperson.bh_fields)
  return bh_fields_.Get(index);
}
inline ::pb::tperson_bh_field* tperson::mutable_bh_fields(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tperson.bh_fields)
  return bh_fields_.Mutable(index);
}
inline ::pb::tperson_bh_field* tperson::add_bh_fields() {
  // @@protoc_insertion_point(field_add:pb.tperson.bh_fields)
  return bh_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::tperson_bh_field >*
tperson::mutable_bh_fields() {
  // @@protoc_insertion_point(field_mutable_list:pb.tperson.bh_fields)
  return &bh_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::tperson_bh_field >&
tperson::bh_fields() const {
  // @@protoc_insertion_point(field_list:pb.tperson.bh_fields)
  return bh_fields_;
}

// -------------------------------------------------------------------

// tgroup

// string name = 1;
inline void tgroup::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tgroup::name() const {
  // @@protoc_insertion_point(field_get:pb.tgroup.name)
  return name_.GetNoArena();
}
inline void tgroup::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.tgroup.name)
}
#if LANG_CXX11
inline void tgroup::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.tgroup.name)
}
#endif
inline void tgroup::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.tgroup.name)
}
inline void tgroup::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.tgroup.name)
}
inline ::std::string* tgroup::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pb.tgroup.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tgroup::release_name() {
  // @@protoc_insertion_point(field_release:pb.tgroup.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tgroup::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.tgroup.name)
}

// repeated .pb.tperson persons = 3;
inline int tgroup::persons_size() const {
  return persons_.size();
}
inline void tgroup::clear_persons() {
  persons_.Clear();
}
inline const ::pb::tperson& tgroup::persons(int index) const {
  // @@protoc_insertion_point(field_get:pb.tgroup.persons)
  return persons_.Get(index);
}
inline ::pb::tperson* tgroup::mutable_persons(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tgroup.persons)
  return persons_.Mutable(index);
}
inline ::pb::tperson* tgroup::add_persons() {
  // @@protoc_insertion_point(field_add:pb.tgroup.persons)
  return persons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::tperson >*
tgroup::mutable_persons() {
  // @@protoc_insertion_point(field_mutable_list:pb.tgroup.persons)
  return &persons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::tperson >&
tgroup::persons() const {
  // @@protoc_insertion_point(field_list:pb.tgroup.persons)
  return persons_;
}

// repeated string fields = 5;
inline int tgroup::fields_size() const {
  return fields_.size();
}
inline void tgroup::clear_fields() {
  fields_.Clear();
}
inline const ::std::string& tgroup::fields(int index) const {
  // @@protoc_insertion_point(field_get:pb.tgroup.fields)
  return fields_.Get(index);
}
inline ::std::string* tgroup::mutable_fields(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tgroup.fields)
  return fields_.Mutable(index);
}
inline void tgroup::set_fields(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pb.tgroup.fields)
  fields_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void tgroup::set_fields(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pb.tgroup.fields)
  fields_.Mutable(index)->assign(std::move(value));
}
#endif
inline void tgroup::set_fields(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb.tgroup.fields)
}
inline void tgroup::set_fields(int index, const char* value, size_t size) {
  fields_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb.tgroup.fields)
}
inline ::std::string* tgroup::add_fields() {
  // @@protoc_insertion_point(field_add_mutable:pb.tgroup.fields)
  return fields_.Add();
}
inline void tgroup::add_fields(const ::std::string& value) {
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb.tgroup.fields)
}
#if LANG_CXX11
inline void tgroup::add_fields(::std::string&& value) {
  fields_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb.tgroup.fields)
}
#endif
inline void tgroup::add_fields(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  fields_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb.tgroup.fields)
}
inline void tgroup::add_fields(const char* value, size_t size) {
  fields_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb.tgroup.fields)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
tgroup::fields() const {
  // @@protoc_insertion_point(field_list:pb.tgroup.fields)
  return fields_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
tgroup::mutable_fields() {
  // @@protoc_insertion_point(field_mutable_list:pb.tgroup.fields)
  return &fields_;
}

// -------------------------------------------------------------------

// tcontacts

// repeated .pb.tbh_field bh_fields = 1;
inline int tcontacts::bh_fields_size() const {
  return bh_fields_.size();
}
inline void tcontacts::clear_bh_fields() {
  bh_fields_.Clear();
}
inline const ::pb::tbh_field& tcontacts::bh_fields(int index) const {
  // @@protoc_insertion_point(field_get:pb.tcontacts.bh_fields)
  return bh_fields_.Get(index);
}
inline ::pb::tbh_field* tcontacts::mutable_bh_fields(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tcontacts.bh_fields)
  return bh_fields_.Mutable(index);
}
inline ::pb::tbh_field* tcontacts::add_bh_fields() {
  // @@protoc_insertion_point(field_add:pb.tcontacts.bh_fields)
  return bh_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::tbh_field >*
tcontacts::mutable_bh_fields() {
  // @@protoc_insertion_point(field_mutable_list:pb.tcontacts.bh_fields)
  return &bh_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::tbh_field >&
tcontacts::bh_fields() const {
  // @@protoc_insertion_point(field_list:pb.tcontacts.bh_fields)
  return bh_fields_;
}

// repeated .pb.tgroup groups = 3;
inline int tcontacts::groups_size() const {
  return groups_.size();
}
inline void tcontacts::clear_groups() {
  groups_.Clear();
}
inline const ::pb::tgroup& tcontacts::groups(int index) const {
  // @@protoc_insertion_point(field_get:pb.tcontacts.groups)
  return groups_.Get(index);
}
inline ::pb::tgroup* tcontacts::mutable_groups(int index) {
  // @@protoc_insertion_point(field_mutable:pb.tcontacts.groups)
  return groups_.Mutable(index);
}
inline ::pb::tgroup* tcontacts::add_groups() {
  // @@protoc_insertion_point(field_add:pb.tcontacts.groups)
  return groups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::tgroup >*
tcontacts::mutable_groups() {
  // @@protoc_insertion_point(field_mutable_list:pb.tcontacts.groups)
  return &groups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::tgroup >&
tcontacts::groups() const {
  // @@protoc_insertion_point(field_list:pb.tcontacts.groups)
  return groups_;
}

// int64 timestamp = 4;
inline void tcontacts::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 tcontacts::timestamp() const {
  // @@protoc_insertion_point(field_get:pb.tcontacts.timestamp)
  return timestamp_;
}
inline void tcontacts::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:pb.tcontacts.timestamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_contacts_2eproto__INCLUDED
